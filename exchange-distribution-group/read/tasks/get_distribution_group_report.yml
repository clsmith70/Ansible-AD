- name: Read distribution group info
  no_log: true
  ansible.windows.win_powershell:
    script: |
      Write-Verbose -Message "Establish connection to Exchange on-premises"
      $password = ConvertTo-SecureString -String "{{ AD_PASSWORD }}" -AsPlainText -Force
      $credential = New-Object -TypeName System.Management.Automation.PSCredential("{{ AD_USERNAME }}", $password)
      $hx = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri "{{ exchange_uri }}" -Name HybridServer -Credential $credential
      Import-PSSession -Session $hx -WarningAction SilentlyContinue | Out-Null

      Write-Verbose -Message "Return group info"
      if (Get-DistributionGroup -Identity "{{ distribution_group_identity }}") {
        Write-Output (Get-DistributionGroup -Identity "{{ distribution_group_identity }}" | Select-Object -Property DisplayName,Alias,PrimarySmtpAddress,GroupType)
      }
  register: distribution_group_detail

- name: Read distribution group members
  no_log: true
  ansible.windows.win_powershell:
    script: |
      Write-Verbose -Message "Establish connection to Exchange on-premises"
      $password = ConvertTo-SecureString -String "{{ AD_PASSWORD }}" -AsPlainText -Force
      $credential = New-Object -TypeName System.Management.Automation.PSCredential("{{ AD_USERNAME }}", $password)
      $hx = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri "{{ exchange_uri }}" -Name HybridServer -Credential $credential
      Import-PSSession -Session $hx -WarningAction SilentlyContinue | Out-Null

      Write-Verbose -Message "Return group members"
      Write-Output (Get-DistributionGroupMember -Identity "{{ distribution_group_identity }}" | Select-Object -Property DisplayName,Alias,PrimarySmtpAddress,@{n='RecipientType';e={if ($_.RecipientType -eq 'MailUser') { "Internal" } else { "External" }}})
  register: distribution_group_members

- name: Create HTML report
  ansible.builtin.template:
      src: dg-html-report.j2
      dest: "/tmp/{{ tower_job_id }}.html"
  delegate_to: 127.0.0.1

- name: Send report
  community.general.sendgrid:
    api_key: "{{ SENDGRID_API_KEY }}"
    to_addresses: 
      - "{{ recipient_email }}"
    from_address: "{{ from_address }}"
    from_name: "{{ from_name }}"
    subject: "Job {{ tower_job_id }}: Contact Query Report"
    body: "{{ lookup('file', '/tmp/{{ tower_job_id }}.html') }}"
    html_body: true
  delegate_to: 127.0.0.1